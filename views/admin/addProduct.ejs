<%- include('../layout/admin/header') %>

    <body>
        <div class="container mt-4">
            <h1 class="mb-4">Add New Product</h1>
            <form id="addProductForm">
                <div class="mb-3">
                    <label for="name" class="form-label">Product Name</label>
                    <input type="text" name="name" class="form-control" id="name">
                </div>
                <div class="mb-3">
                    <label for="brand" class="form-label">Brand</label>
                    <input type="text" name="brand" class="form-control" id="brand">
                </div>
                <div class="mb-3">
                    <label for="modelNumber" class="form-label">Model Number</label>
                    <input type="text" name="modelNumber" class="form-control" id="modelNumber">
                </div>
                <div class="mb-3">
                    <label for="category" class="form-label">Category</label>
                    <!-- <input type="text" name="category" class="form-control" id="category"> -->
                    <!-- <select name="category" class="form-control" id="category" required>
                        <option value="">select a category</option>
                        <% categories.forEach(category=>{%>
                            <option value="<%= category._id>"><%=category.name %></option>
                            <% })>
                    </select> -->
                </div>
                <div class="mb-3">
                    <label for="price" class="form-label">Price</label>
                    <input type="number" name="price" class="form-control" id="price" min="0" step="0.01">
                </div>
                <div class="mb-3">
                    <label for="discountPrice" class="form-label">Discount Price</label>
                    <input type="number" name="discountPrice" class="form-control" id="discountPrice" min="0"
                        step="0.01" value="0">
                </div>
                <div class="mb-3">
                    <label for="stockQuantity" class="form-label">Stock Quantity</label>
                    <input type="number" name="stockQuantity" class="form-control" id="stockQuantity" min="0">
                </div>
                <div class="mb-3">
                    <label for="warranty" class="form-label">Warranty</label>
                    <input type="text" name="warranty" class="form-control" id="warranty">
                </div>
                <div class="mb-3">
                    <label for="images" class="form-label">Images</label>
                    <input type="file" name="images" class="form-control" id="images" multiple>
                    <small class="form-text text-muted">You can select up to 3 images.</small>
                </div>
                <div id="imagePreviews" class="mb-3"></div>
                <div class="mb-3">
                    <label for="description" class="form-label">Description</label>
                    <textarea name="description" class="form-control" id="description" rows="3"></textarea>
                </div>
                <button type="submit" class="btn btn-primary">Add Product</button>
            </form>
        </div>

        <div class="modal fade" id="cropModal" tabindex="-1" aria-labelledby="cropModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg"> <!-- Larger Modal -->
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="cropModalLabel">Crop Image</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="img-container">
                            <img id="cropImage" src="#" alt="Crop Image">
                        </div>
                        <div class="mt-3">
                            <p class="text-muted">Use the cropping tool to adjust the image as needed. Click "Save
                                Cropped Image" to apply changes.</p>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-success" id="saveCroppedImage">Save Cropped Image</button>
                    </div>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <!-- Cropper.js -->
        <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">
        <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const imageInput = document.getElementById('images');
                const imagePreviews = document.getElementById('imagePreviews');
                let cropper;
                let currentImage;

                // Validate image selection
                imageInput.addEventListener('change', function () {
                    const files = this.files;
                    if (files.length > 3) {
                        alert('You can only select up to 3 images.');
                        this.value = '';
                        imagePreviews.innerHTML = '';
                        return;
                    }
                    displaySelectedImages(files);
                });

                // Function to display selected images
                function displaySelectedImages(files) {
                    imagePreviews.innerHTML = '';
                    Array.from(files).forEach(file => {
                        const reader = new FileReader();
                        reader.onload = function (e) {
                            const imageContainer = document.createElement('div');
                            imageContainer.className = 'image-preview-container mb-3';
                            imageContainer.innerHTML = `
                            <div class="d-flex align-items-center">
                                <img src="${e.target.result}" class="img-thumbnail" style="max-width: 150px; max-height: 150px; margin-right: 10px;">
                                <button type="button" class="btn btn-primary crop-image" data-bs-toggle="modal" data-bs-target="#cropModal">Crop</button>
                                <button type="button" class="btn btn-danger remove-image">Remove</button>
                            </div>
                        `;
                            imagePreviews.appendChild(imageContainer);
                            addImageListeners(imageContainer, file);
                        };
                        reader.readAsDataURL(file);
                    });
                }

                // Add listeners for crop and remove buttons
                function addImageListeners(container, file) {
                    const cropButton = container.querySelector('.crop-image');
                    const removeButton = container.querySelector('.remove-image');
                    cropButton.addEventListener('click', function () {
                        const img = container.querySelector('img');
                        document.getElementById('cropImage').src = img.src;
                        currentImage = img;
                        if (cropper) {
                            cropper.destroy();
                        }
                        cropper = new Cropper(document.getElementById('cropImage'), {
                            aspectRatio: 1,
                            viewMode: 2,
                            autoCropArea: 1,
                            responsive: true,
                            background: false,
                            zoomable: true,
                        });
                    });
                    removeButton.addEventListener('click', function () {
                        container.remove();
                    });
                }

                // Save cropped image
                document.getElementById('saveCroppedImage').addEventListener('click', function () {
                    if (cropper && currentImage) {
                        const canvas = cropper.getCroppedCanvas();
                        currentImage.src = canvas.toDataURL();
                        cropper.destroy();
                        cropper = null;
                        const modal = bootstrap.Modal.getInstance(document.getElementById('cropModal'));
                        modal.hide();
                    }
                });
            });


            document.getElementById('addProductForm').addEventListener('submit', async (event) => {
                event.preventDefault();

                const formData = new FormData(event.target);
                try {
                    const response = await fetch('/admin/addProducts', {
                        method: 'post',
                        body: formData
                    });

                    if (response.ok) {
                        const data = await response.json();
                        console.log('Product added successfully:', data);
                        document.getElementById('addProductForm').reset();
                        window.location.reload();
                    } else {
                        const errorData = await response.json();
                        console.error('Error adding product:', errorData);
                    }

                } catch (error) {
                    console.error('Error submitting add product form:', error);
                }
            });
  
        </script>
    </body>

    </html>