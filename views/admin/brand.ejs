<!-- include header -->
<%- include('../layout/admin/header') %>
    <!-- include header -->

    <body>
        <style>
            .btn-edit {
                background-color: #007bff;
                color: white;
            }

            .btn-delete {
                background-color: #dc3545;
                color: white;
            }

            .action-buttons {
                display: flex;
                gap: 10px;
            }

            .action-column {
                width: 150px;
            }

            .form-section {
                margin-bottom: 30px;
            }
        </style>
        <div class="container mt-5">
            <h2>Brand Management</h2>

            <!-- Brands Table -->
            <table class="table table-bordered table-hover mt-3">
                <thead class="thead-dark">
                    <tr>
                        <th>No</th>
                        <th>Name</th>
                        <th>Description</th>
                        <!-- <th>Date Added</th> -->
                        <th class="action-column">Action</th>
                    </tr>
                </thead>
                <tbody id="brandTableBody">
                    <% brands.forEach((brand, index)=> { %>
                        <tr id="brand-<%= brand._id %>">
                            <td>
                                <%= index + 1 %>
                            </td>
                            <td>
                                <%= brand.name %>
                            </td>
                            <td>
                                <%= brand.description %>
                            </td>
                            <!-- <td><%= new Date(brand.createdAt).toLocaleDateString() %></td> -->
                            <td class="action-buttons">
                                <button class="btn btn-edit"
                                    onclick="startEditBrand('<%= brand._id %>', '<%= brand.name %>', '<%= brand.description %>')">Edit</button>
                                <button class="btn btn-delete" onclick="deleteBrand('<%= brand._id %>')">Delete</button>
                            </td>
                        </tr>
                        <% }); %>
                </tbody>
            </table>

            <!-- Edit Brand Form -->
            <div class="form-section" id="editBrandSection" style="display: none;">
                <h4>Edit Brand</h4>
                <form id="editBrandForm">
                    <input type="hidden" id="editBrandId">
                    <div class="form-group">
                        <input type="text" class="form-control" id="editBrandName" placeholder="Brand Name" required>
                    </div>
                    <div class="form-group">
                        <textarea class="form-control" id="editBrandDescription" placeholder="Brand Description"
                            required></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                    <button type="button" class="btn btn-secondary" onclick="cancelEdit()">Cancel</button>
                </form>
            </div>

            <!-- Add Brand Form -->
            <div class="form-section">
                <h4>Add Brand</h4>
                <form id="addBrandForm">
                    <div class="form-group">
                        <input type="text" class="form-control" id="addBrandName" placeholder="Brand Name" required>
                    </div>
                    <div class="form-group">
                        <textarea class="form-control" id="addBrandDescription" placeholder="Brand Description"
                            required></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">Add Brand</button>
                </form>
            </div>
        </div>

        <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script>
            // Function to start editing a brand
            function startEditBrand(id, name, description) {
                document.getElementById('editBrandId').value = id;
                document.getElementById('editBrandName').value = name;
                document.getElementById('editBrandDescription').value = description;
                document.getElementById('editBrandSection').style.display = 'block';
            }

            // Function to cancel editing
            function cancelEdit() {
                document.getElementById('editBrandSection').style.display = 'none';
                document.getElementById('editBrandForm').reset();
            }

            // Add Brand Form submission
            document.getElementById('addBrandForm').addEventListener('submit', async (event) => {
                event.preventDefault();
                const name = document.getElementById('addBrandName').value;
                const description = document.getElementById('addBrandDescription').value;

                // check if the brand already exists
                try {
                    const checkResponse = await fetch(`/admin/checkBrand?name=${encodeURIComponent(name)}`);
                    const checkData = await checkResponse.json();

                    if (checkData.exists) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Brand already exists. Please add another brand!'
                        });
                        return;
                    }

                    const response = await fetch('/admin/addBrand', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ name, description })
                    });

                    if (response.ok) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: 'Brand added successfully.'
                        }).then(() => {
                            document.getElementById('addBrandForm').reset();
                            window.location.reload();
                        });
                    } else {
                        const data = await response.json();
                        console.error('Error adding brand:', data);
                        Swal.fire('Error', 'Failed to add brand', 'error');
                    }
                } catch (error) {
                    console.error('Error submitting form:', error);
                    Swal.fire('Error', 'An error occurred', 'error');
                }
            });

            // Edit Brand Form submission
            document.getElementById('editBrandForm').addEventListener('submit', async (event) => {
                event.preventDefault();
                const id = document.getElementById('editBrandId').value;
                const name = document.getElementById('editBrandName').value;
                const description = document.getElementById('editBrandDescription').value;

                try {
                    const response = await fetch(`/admin/updateBrand/${id}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ name, description })
                    });

                    if (response.ok) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: 'Brand updated successfully.'
                        }).then(() => {
                            const row = document.getElementById(`brand-${id}`);
                            if (row) {
                                row.querySelector('td:nth-child(2)').textContent = name;
                                row.querySelector('td:nth-child(3)').textContent = description;
                            }
                            cancelEdit();
                            window.location.reload();
                        });
                    } else {
                        const data = await response.json();
                        console.error('Error updating brand:', data);
                        Swal.fire('Error', 'Failed to update brand', 'error');
                    }
                } catch (error) {
                    console.error('Error submitting form:', error);
                    Swal.fire('Error', 'An error occurred', 'error');
                }
            });
            // Function to delete a brand
            async function deleteBrand(id) {
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'You will not be able to recover this brand!',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'No, cancel!',
                    reverseButtons: true
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        try {
                            const response = await fetch(`/admin/brand/${id}`, {
                                method: 'DELETE'
                            });

                            if (response.ok) {
                                Swal.fire('Success', 'Brand deleted successfully!', 'success').then(() => {
                                    window.location.reload();
                                });
                            } else {
                                const data = await response.json();
                                console.error('Error deleting brand:', data);
                                Swal.fire('Error', 'Failed to delete brand', 'error');
                            }
                        } catch (error) {
                            console.error('Error deleting brand:', error);
                            Swal.fire('Error', 'An error occurred', 'error');
                        }
                    } else if (result.dismiss === Swal.DismissReason.cancel) {
                        Swal.fire('Cancelled', 'Your brand is safe :)', 'error');
                    }
                });
            }

        </script>
    </body>

    </html>