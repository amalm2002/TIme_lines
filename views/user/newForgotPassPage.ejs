<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Set New Password</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        .np-body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f6f8fa;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }

        .np-container {
            background-color: #ffffff;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            padding: 40px;
            width: 100%;
            max-width: 380px;
        }

        .np-title {
            font-size: 28px;
            color: #2c3e50;
            margin-bottom: 30px;
            text-align: center;
            font-weight: 600;
        }

        .np-form {
            display: flex;
            flex-direction: column;
        }

        .np-input-group {
            position: relative;
            margin-bottom: 20px;
        }

        .np-input {
            width: 85%;
            padding: 14px;
            padding-right: 40px;
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s ease;
        }

        .np-input:focus {
            outline: none;
            border-color: #3498db;
        }

        .np-toggle {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            cursor: pointer;
            color: #7f8c8d;
        }

        .np-button {
            background-color: #3498db;
            color: white;
            border: none;
            padding: 14px;
            border-radius: 8px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.1s ease;
            font-weight: 600;
            margin-top: 10px;
        }

        .np-button:hover {
            background-color: #2980b9;
        }

        .np-button:active {
            transform: scale(0.98);
        }

        .np-error-message {
            color: #e74c3c;
            font-size: 14px;
            margin-top: 10px;
            text-align: center;
        }

        .np-error-message.hidden {
            display: none;
        }

        @media (max-width: 480px) {
            .np-container {
                padding: 30px;
            }

            .np-title {
                font-size: 24px;
            }

            .np-input,
            .np-button {
                font-size: 14px;
            }
        }
    </style>
</head>

<body class="np-body">
    <div class="np-container">
        <h1 class="np-title">Set New Password</h1>
        <form id="newUserPassword" class="np-form">
            <div class="np-input-group">
                <input type="password" id="newPassword" class="np-input" placeholder="New Password">
                <button type="button" class="np-toggle" onclick="toggleNpPassword('newPassword')">
                    <i class="fas fa-eye"></i>
                </button>
            </div>
            <div class="np-input-group">
                <input type="password" id="confirmPassword" class="np-input" placeholder="Confirm Password">
                <button type="button" class="np-toggle" onclick="toggleNpPassword('confirmPassword')">
                    <i class="fas fa-eye"></i>
                </button>
            </div>
            <div id="error-message" class="np-error-message hidden"></div>
            <button type="submit" class="np-button">Set Password</button>
        </form>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
    <script>
        function toggleNpPassword(inputId) {
            const input = document.getElementById(inputId);
            const icon = input.nextElementSibling.querySelector('i');

            if (input.type === 'password') {
                input.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                input.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        }

        document.getElementById('newUserPassword').addEventListener('submit', async (event) => {
            event.preventDefault();

            const newPassword = document.getElementById('newPassword').value.trim();
            const confirmPassword = document.getElementById('confirmPassword').value.trim();
            const errorMessageElement = document.getElementById('error-message');

            errorMessageElement.innerHTML = '';
            errorMessageElement.classList.add('hidden');
            try {
                const response = await fetch('/newPassword', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ newPassword, confirmPassword })
                });

                const data = await response.json();

                if (response.ok) {
                    Swal.fire({
                        title: 'Success!',
                        text: 'Password changed successfully.',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        window.location.href = '/register';
                    });
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: data.errorMessage,
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            } catch (error) {
                console.error('Error during password change:', error);
                Swal.fire({
                    title: 'Error!',
                    text: 'An unexpected error occurred!',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });

        const inputs = document.querySelectorAll('.np-input');
        inputs.forEach(input => {
            input.addEventListener('input', () => {
                document.getElementById('error-message').innerHTML = '';
                document.getElementById('error-message').classList.add('hidden');
            });
        });
    </script>
</body>

</html>